name,ring,quadrant,description,prev_ring
Amazon SageMaker,Adopt,Platforms,"[Amazon SageMaker (SM)](https://aws.amazon.com/sagemaker/)is a fully-managed service that enables data scientists and developers to build quickly, train, and deploy machine learning models at scale.

In Skai, SM is used across all ML projects. However, SM is not an ML platform but a collection of building blocks that requires some heavy lifting to develop and deliver an ML project.

In Skai we use SM in production for several products, usually for products that involve both Development and Data Science teams' code.",Trial
AWS Lambda,Adopt,Platforms,"[AWS Lambda](https://aws.amazon.com/lambda/) is a serverless compute service that runs code in response to events and automatically manages the underlying compute resources. As a result, it improves resource utilization, enables event-driven architectures and reduces the operations hassle.

In Skai, AWS Lambda is already well adopted and made accessible to all applications teams by template repos and automated provisioning using Pulumi.
Teams can start using Lambda, especially for fast proof-of-concept implementations, without managing new microservices.",Trial
BDD (Behaviour-driven development) ,Adopt,Techniques,"[BDD (Behaviour-driven development)](https://en.wikipedia.org/wiki/Behavior-driven_development) means writing tests using [Cucumber](https://cucumber.io/)/ [Karate](https://karatelabs.github.io/karate/) to describe the behavior of the feature before developing it. 

In Skai, teams already work this way and can find critical defects, reduce dev time, and increase trust in test coverage.",Trial
Data Mesh,Adopt,Techniques,"[Data Mesh](https://martinfowler.com/articles/data-mesh-principles.html) is a data platform architecture that encourages teams' ownership of their data by providing self-serve tooling and over-arching governance. 

In Skai, we're rebuilding our data platform according to the data mesh principles.",Trial
Java 17,Adopt,Languages & frameworks,"Java 17 is the latest LTS Java version, containing many improvements that allow us to write code that is both more concise and safer than before. 

In Skai, Java 17 is the default version for new Java microservices. A full-on migration plan for existing services is yet to come.",Trial
Microservices: Prefer API tests for BDD,Adopt,Techniques,"In Skai, our microservice templates contain infrastructure for creating two types of behavioral tests - API tests (using [Karate](https://karatelabs.github.io/karate/)) and in-process integration tests (using [Cucumber](https://cucumber.io/)). We should opt for an API test for microservices whose primary interfaces are RESTful.

The benefits of API tests over Cucumber tests outweigh their downsides: they cover more functionality (e.g., HTTP statuses) with little-to-no extra effort; They provide an excellent source of documentation (thanks to Karate's syntax); They test the application in complete isolation, closest to production. And they can easily be reused as Smoke tests in staging and production when relevant. One should fall back to using Cucumber only in the rare cases where API tests are insufficient, e.g., when a component of the application must be replaced with a stub or when necessary test data can't be populated via an API call. ",Trial
Pulumi,Adopt,Platforms,"[Pulumi](https://www.pulumi.com/) is an Infrastructure-as-Code (IaC) framework allowing one to spin up cloud resources using native programmatic languages, such as Python, and maintain their state using its managed platform.

In Skai, Pulumi is well-adopted by the DevOps group to replace [Terraform](https://www.terraform.io/) for managing cloud resources. It is now also approachable for the application development teams to use it as a self-serve cloud resources management tool, increasing their ability to own their services fully.",Trial
Data Catalog,Assess,Tools,"A data catalog is a centralized repository or database that provides information about the organization's data assets, including metadata, data lineage, data quality, and access permissions. It serves as a searchable index or directory of all the data sources and their attributes that exist within an organization.

A data catalog is important for an organization because it provides a comprehensive view of the organization's data assets, enabling users to easily find, understand, and use the data they need for their business operations. Furthermore, a data catalog helps to enhance collaboration and communication between different teams within the organization, as they can all access and share the same information about data assets.",New
Data Observability,Trial,Tools,"Data observability includes using machine learning algorithms for automated data anomaly monitoring and alerting, tracing data lineage, and enforcing business rules on incoming data. These tools help accelerate data incident resolution or avoid incidents by proactively stopping bad data from reaching customers. 

We strongly believe this is a critical component in our data architecture.",New
Data questionnaire (internal),Adopt,Techniques,"When working with data, we must understand its properties, limitations, and lifecycle. Any project adding a new type of data source or dataset should include in their high-level design answers based on our internal Data Questionnaire Template. This template can be found under the resources section of our internal High-Level Design template).",New
Datadog,Adopt,Platforms,"[Datadog](https://www.datadoghq.com/) is an extensive observability platform providing. In Skai, all our services and components, from the application to the infrastructure level, are monitored using it. Metrics and logs reporting to Datadog are built-in in all our services as part of its initial setup and provisioning. They provide an out-of-the-box developers observability for their services.",New
Flexible Columns (internal),Adopt,Techniques,"Skai has developed an internal infrastructure called ""Flexible columns"" built on the SingleStore DB's JSON data type. This infrastructure provides a simple way to add various user-facing semi-structured data sets.",New
GitHub Actions for Release Management,Trial,Tools,"Managing and documenting releases in today's Continuous Delivery reality is often overlooked. While some components can evolve naturally without it, some (like internal or external client libraries) benefit greatly from careful documentation and control over releases. That said - managing these manually is tedious and error-prone. 
We've found [GitHub Actions](https://github.com/features/actions) to be the right tool for automating these tasks: all of the information for building and documenting a release exists in GitHub (in the form of Issues /PRs/Commits) and is therefore naturally accessible for the variety of off-the-shelf Actions that can manage these releases. We're gradually increasing our usage of such actions across our org. ",New
Kafka,Adopt,Platforms,"[Apache Kafka](https://kafka.apache.org/) is an open-source distributed event streaming platform thousands of companies use for high-performance data pipelines, streaming analytics, data integration, and mission-critical applications.

In Skai, we use Kafka across mission-critical flows, such as streaming data between MySQL and SingleStore, Async communication between services, and more.",New
OpsLevel,Adopt,Tools,"[OpsLevel](https://www.opslevel.com/) is a SaaS service catalog that enables engineering teams to build more mature, reliable software and resolve incidents faster.

In Skai, we use OpsLevel to improve service observability, harnessing its ""checks"" feature to drive high standards and increase team ownership.",New
Playwright,Assess,Tools,"[Playwright](https://playwright.dev/) is an end-to-end test runner that enables cross-browser testing with an easy API. Specifically for Skai's use case, it allows us to link our tests with our code base, reducing testing flakiness and providing clearer ownership of scenarios.",New
Python 3.10,Adopt,Languages & frameworks,"Python is a high-level, general-purpose programming language. It is gaining popularity as time goes by due to its code readability and ease of use.

In Skai, it is used increasingly in Data research projects, AWS Lambda implementations, Pulumi implementations and other microservices (mainly operational).

Python 3.10 is the default version for new projects.",New
Snowflake,Adopt,Platforms,"[Snowflake](https://snowflake.com/) is a managed data platform used in Skai as the data lake and data warehouse. It serves as our analytical database and provides a storage and computing platform for various analytical and AI features in Skai applications.

Snowflake replaces Skai's legacy Hadoop platform.",New
Turborepo,Adopt,Tools,"[Turborepo](https://turbo.build/) is a monorepo management tool, mainly for node/javascript projects. Its simple API enables running parallel tasks and simple caching management for the local and CI environments. 

In Skai, we use it for managing our UI monorepo, gaining immediate savings in our CI jobs with simple configurations and minimal effort.",New
AWS DMS,Trial,Tools,"[AWS Database Migration Service (DMS)](https://aws.amazon.com/dms/) is a managed migration and replication service that helps move your database and analytics workloads to AWS quickly, securely, and with minimal downtime and zero data loss. AWS DMS supports migration between many database and analytics engines. 

In Skai, we already have a few usages in some production projects. So far, this tool has shown very good results and usage simplicity.",New
AI code assitant tool,Assess,Tools,"With the latest significant advancement with GPT, AI code assistant tooling can potentially help reduce development time and improve quality and documentation. ",New
dbt,Assess,Tools,"[dbt](https://www.getdbt.com/) is an SQL-based transformation workflow tool that helps create analytical data models in alignment with software engineering practices: version management, testing, CI/CD, documentation, and monitoring.

In Skai, dbt can be an alternative to using Python scripts for transformations.",New
Java AWS Lambda,Assess,Platforms,"Our usage of [AWS Lambda](https://aws.amazon.com/lambda/) in Skai has grown, and it's now a useful option in our toolbox used in data pipelines, operations, and more. Because of the increased usage, and since we started providing generic components for teams using AWS Lambda, we've seen more use cases in the programming language we use, Python, which has slowed our implementation process. In use cases where polymorphism and other OOP design elements were needed, or use cases where Python lacks good 3rd party libs (even when it's not missing, we're often widely familiar with the Java alternative).

For these reasons, the Tech Leads forum created an internal Java Lambda template for teams to try. Currently, it's in Beta mode, which mainly means the creation is still manual but has full CI/CD support once set up.",New
Airflow,Adopt,Platforms,"[Airflow](https://airflow.apache.org/) uses directed acyclic graphs (DAGs) to manage workflow orchestration. Tasks and dependencies are defined in Python, and then Airflow manages the scheduling and execution.

In Skai, Airflow is used by many teams for various use cases. It is hosted on [Astronomer](https://www.astronomer.io/) and has full CI/CD support.",Adopt
API Gateway,Adopt,Tools,"API Gateway is used to manage and expose backend APIs securely. In Skai, we use [Kong](https://konghq.com/kong) as the gateway for public APIs.

In addition, we use the API Gateway internally in the following scenarios:
1. To solve CORS issues, usually when the UI needs to call a backend service directly.
2. To trigger AWS Lambdas via REST calls. In this case, we use [AWS API Gateway](https://aws.amazon.com/api-gateway/).

Kong configuration management is done using an internal tool called [king-kong](https://medium.com/kenshoos-engineering-blog/king-of-our-kong-how-we-built-a-configuration-management-tool-for-kong-b1bd4757365a).",Adopt
Clean Code,Adopt,Techniques,"[Clean code](https://learning.oreilly.com/library/view/clean-code-a/9780136083238/) is a set of principles for writing high-quality and maintainable code. 

In Skai, we promote & practice clean code methodologies as part of our onboarding, development and code review processes.",Adopt
Formik (Form state management library),Adopt,Languages & frameworks,"[Formik](https://formik.org/) provides a simplified way of managing the state and validations in a React form. 

In Skai, we trialed with Formik in numerous Skai UI components and found it valuable. Using it ensures that we do not write our state management and validation solution in every dialog, reducing the resources required to deliver features.",Adopt
Gradle,Adopt,Tools,"[Gradle](https://gradle.org/) is our tool of choice for building JVM-based projects. It's been proven to be more effective and flexible than its alternatives (Maven, SBT). 

In Skai, we've built significant expertise and a toolset (e.g., plugins) that makes Gradle optimal for our needs. Therefore, JVM projects not using Gradle should be migrated to Gradle. ",Adopt
Hadoop,Hold,Platforms,"[Hadoop](https://hadoop.apache.org/) is an open-source big data ecosystem that we have used in Skai.

We're amidst an extensive project of deprecating Hadoop and replacing different parts of this ecosystem with other platforms & tools. For example, [Snowflake](https://www.snowflake.com/) replaces Hive and Impala, and [Databricks](https://databricks.com/) provides Spark clusters. While the deprecation is still in progress and existing workloads are being migrated to the new platforms, no new workloads should be developed on Hadoop.",Hold
Immutability,Adopt,Techniques,"Immutability allows code to be more easily written, read and reasoned about. In object-oriented and functional programming, an immutable object's state cannot be modified after it is created. Immutable objects are simple and predictable. An immutable object can be in exactly one state, the state in which it was created. Immutable objects are inherently thread-safe and require no synchronization. 

In all Skai codebases, existing and new, Immutability should be adopted both in objects definitions and as a technical design KPI.",Adopt
Kubiverse,Adopt,Platforms,"Kubiverse is a Skai in-house microservices lifecycle management platform. When a team wants to create a new microservice, it should do it using Kubiverse. 

Kubiverse generates new GitHub repos according to pre-defined templates, provisions the microservices on Kubernetes, creates a CI/CD pipeline out-of-the-box and enables managing the service's resources configuration and environments variables.

Kubiverse is fully-supported and owned by our DevOps group.",Adopt
NextJS,Adopt,Languages & frameworks,"[NextJS](https://nextjs.org/) is a front-end framework with the goal of producing performant UIs through best practices. 

NextJS, being React-based and very developer experience oriented, proved to be a good choice in Skai when starting a new project, allowing new developers to start up very quickly and maintain good practices during development. We're already using it across different projects in the company and provide project templates, provisioning and CI/CD for it.",Adopt
Prefer native language APIs over 3rd party libs,Adopt,Techniques,"The most stable APIs we have available for any of the languages we use are the language's native APIs. Whether the language guarantees backward compatibility or migration guides, using these APIs creates the least amount of compatibility issues and dependencies conflicts which any 3rd party library for general utils is prone to. Therefore whenever possible, use the native language APIs. Examples: use java.time instead of joda.time; use Java's Collections APIS instead of Guava's Collections APIs or apache ""commons"" APIs.",Adopt
Risk-based testing,Adopt,Techniques,"[Risk-based testing](https://en.wikipedia.org/wiki/Risk-based_testing) (RBT) is a methodology that prioritizes the tests of features based on the risk of functions failure to focus on the impactful scenarios.

In Skai, we want to focus QA and development on the risks to avoid over-testing and to identify where we can move quicker and where we need to invest more in mitigation. 
For more: [internal link](https://stackoverflow.com/c/kenshoo/articles/1374)",Adopt
Scala,Hold,Languages & frameworks,"Scala was introduced in Skai back in 2014. It was chosen as an additional formal programming language in our stacks due to its popularity, expressiveness, immutable and functional nature, and other benefits. The onboarding included training and workshops, nurturing subject-matter experts, and eventually, some teams started developing new services and libraries with Scala.

Since then, some things have changed: Scala's popularity subsided, recruiting became harder, the Scala knowledge within the company decreased, and we see that Java, our main stack, is adopting many of Scala's benefits. Unfortunately, this situation reduced our flexibility, increased the maintenance costs, and slowed our growth.

We will stop developing new services and components with Scala. The owning teams of existing ones will continue to maintain those until their EOL or migrated. Whenever a team is required to add a significant investment to its Scala component, they should consider alternative implementations, such as a Java module, a separate service, an AWS Lambda, etc.",Hold
Self-testing code,Adopt,Techniques,"Self-testing code exists when you can run a series of automated tests against the code base and be confident that, should the tests pass, your code is free of any substantial defects.
Self-testing code is a key part of Continuous Integration, and it's said that you aren't doing continuous integration unless you have self-testing code. As a pillar of Continuous Integration, it is also a necessary part of Continuous Delivery.

In Skai, we should continue utilizing our automation infrastructures (JUnit, Karate, Cucumber and more) to maintain a high testing coverage.",Adopt
SingleStore (Memsql),Adopt,Platforms,"[SingleStore](https://www.singlestore.com/) is a distributed, relational, SQL database management system that features ANSI SQL support and is known for speed in data ingest, transaction processing, and query processing.

In Skai, we've been using it for a few years across different grids to provide our users with a flexible and performant user experience.",Adopt
Spring Boot,Adopt,Languages & frameworks,"[Spring Boot](https://spring.io/projects/spring-boot) is an open-source Java framework for creating Spring-based applications and services.

In Skai, Spring Boot is our new stack for microservices to be used for any new Java service, replacing Dropwizard as the default stack.",Adopt
Terraform,Hold,Tools,"[Terraform](https://www.terraform.io/) is an open-source Infrastructure-as-Code tool to manage cloud resources. However, unlike [Pulumi](https://www.pulumi.com/), it is declarative and not well-adopted among developers, preventing them from fully owning their cloud resources.

In Skai, we've been using Terraform for various resources management. However, we're slowly deprecating it in favor of Pulumi so that it will manage all new cloud resources.",Hold